from sqlalchemy import MetaData, Table, Column, Float, Integer, DateTime, SmallInteger, JSON, inspect, text
from sqlalchemy.dialects.mysql import insert, MEDIUMTEXT

def create_table(engine, table_name):
    metadata = MetaData()
    ticker_table = Table(
        table_name,
        metadata,
        Column('timestamp', DateTime, primary_key=True),
        Column('market_price', Float),
        Column('ask_price', Float),
        Column('bid_price', Float),
        Column('open_price', Float),
        Column('high_price', Float),
        Column('low_price', Float),
        Column('close_price', Float),
        Column('volume', Integer),
        Column('RSI', Float),
        Column('MACD', Float),
        Column('MACD_Signal', Float),
        Column('MACD_Hist', Float),
        Column('SMA', Float),
        Column('EMA12P', Float),
        Column('EMA26P', Float),
        Column('EMA50P', Float),
        Column('EMA200P', Float),
        Column('Bollinger_Middle', Float),
        Column('Bollinger_Upper', Float),
        Column('Bollinger_Lower', Float),
        Column('Stochastic_Oscillator_K', Float),
        Column('Stochastic_Oscillator_D', Float),
        Column('Chicku_Span', Float),
        Column('Tenken_Sen', Float),
        Column('Kijun_Sen', Float),
        Column('Senkou_A', Float),
        Column('Senkou_B', Float),
        Column('Fib100%', Float),
        Column('Fib78.6%', Float),
        Column('Fib61.8%', Float),
        Column('Fib50%', Float),
        Column('Fib38.2%', Float),
        Column('Fib23.6%', Float),
        Column('Fib0%', Float),
        Column('ATR7P', Float),
        Column('ATR14P', Float),
        Column('ATR20P', Float),
        Column('ATR50P', Float),
        Column('ATR100P', Float),
        Column('google_trends_score', SmallInteger),
        Column('open_priceM5', Float),
        Column('high_priceM5', Float),
        Column('low_priceM5', Float),
        Column('close_priceM5', Float),
        Column('volumeM5', Integer),
        Column('RSIM5', Float),
        Column('MACDM5', Float),
        Column('MACD_SignalM5', Float),
        Column('MACD_HistM5', Float),
        Column('SMAM5', Float),
        Column('EMA12PM5', Float),
        Column('EMA26PM5', Float),
        Column('EMA50PM5', Float),
        Column('EMA200PM5', Float),
        Column('Bollinger_MiddleM5', Float),
        Column('Bollinger_UpperM5', Float),
        Column('Bollinger_LowerM5', Float),
        Column('Stochastic_Oscillator_KM5', Float),
        Column('Stochastic_Oscillator_DM5', Float),
        Column('Chicku_SpanM5', Float),
        Column('Tenken_SenM5', Float),
        Column('Kijun_SenM5', Float),
        Column('Senkou_AM5', Float),
        Column('Senkou_BM5', Float),
        Column('Fib100%M5', Float),
        Column('Fib78.6%M5', Float),
        Column('Fib61.8%M5', Float),
        Column('Fib50%M5', Float),
        Column('Fib38.2%M5', Float),
        Column('Fib23.6%M5', Float),
        Column('Fib0%M5', Float),
        Column('ATR7PM5', Float),
        Column('ATR14PM5', Float),
        Column('ATR20PM5', Float),
        Column('ATR50PM5', Float),
        Column('ATR100PM5', Float),
        Column('google_trends_scoreM5', SmallInteger),
        Column('open_priceM15', Float),
        Column('high_priceM15', Float),
        Column('low_priceM15', Float),
        Column('close_priceM15', Float),
        Column('volumeM15', Integer),
        Column('RSIM15', Float),
        Column('MACDM15', Float),
        Column('MACD_SignalM15', Float),
        Column('MACD_HistM15', Float),
        Column('SMAM15', Float),
        Column('EMA12PM15', Float),
        Column('EMA26PM15', Float),
        Column('EMA50PM15', Float),
        Column('EMA200PM15', Float),
        Column('Bollinger_MiddleM15', Float),
        Column('Bollinger_UpperM15', Float),
        Column('Bollinger_LowerM15', Float),
        Column('Stochastic_Oscillator_KM15', Float),
        Column('Stochastic_Oscillator_DM15', Float),
        Column('Chicku_SpanM15', Float),
        Column('Tenken_SenM15', Float),
        Column('Kijun_SenM15', Float),
        Column('Senkou_AM15', Float),
        Column('Senkou_BM15', Float),
        Column('Fib100%M15', Float),
        Column('Fib78.6%M15', Float),
        Column('Fib61.8%M15', Float),
        Column('Fib50%M15', Float),
        Column('Fib38.2%M15', Float),
        Column('Fib23.6%M15', Float),
        Column('Fib0%M15', Float),
        Column('ATR7PM15', Float),
        Column('ATR14PM15', Float),
        Column('ATR20PM15', Float),
        Column('ATR50PM15', Float),
        Column('ATR100PM15', Float),
        Column('google_trends_scoreM15', SmallInteger),
        Column('open_priceM60', Float),
        Column('high_priceM60', Float),
        Column('low_priceM60', Float),
        Column('close_priceM60', Float),
        Column('volumeM60', Integer),
        Column('RSIM60', Float),
        Column('MACDM60', Float),
        Column('MACD_SignalM60', Float),
        Column('MACD_HistM60', Float),
        Column('SMAM60', Float),
        Column('EMA12PM60', Float),
        Column('EMA26PM60', Float),
        Column('EMA50PM60', Float),
        Column('EMA200PM60', Float),
        Column('Bollinger_MiddleM60', Float),
        Column('Bollinger_UpperM60', Float),
        Column('Bollinger_LowerM60', Float),
        Column('Stochastic_Oscillator_KM60', Float),
        Column('Stochastic_Oscillator_DM60', Float),
        Column('Chicku_SpanM60', Float),
        Column('Tenken_SenM60', Float),
        Column('Kijun_SenM60', Float),
        Column('Senkou_AM60', Float),
        Column('Senkou_BM60', Float),
        Column('Fib100%M60', Float),
        Column('Fib78.6%M60', Float),
        Column('Fib61.8%M60', Float),
        Column('Fib50%M60', Float),
        Column('Fib38.2%M60', Float),
        Column('Fib23.6%M60', Float),
        Column('Fib0%M60', Float),
        Column('ATR7PM60', Float),
        Column('ATR14PM60', Float),
        Column('ATR20PM60', Float),
        Column('ATR50PM60', Float),
        Column('ATR100PM60', Float),
        Column('google_trends_scoreM60', SmallInteger),
        Column('open_priceM1440', Float),
        Column('high_priceM1440', Float),
        Column('low_priceM1440', Float),
        Column('close_priceM1440', Float),
        Column('volumeM1440', Integer),
        Column('RSIM1440', Float),
        Column('MACDM1440', Float),
        Column('MACD_SignalM1440', Float),
        Column('MACD_HistM1440', Float),
        Column('SMAM1440', Float),
        Column('EMA12PM1440', Float),
        Column('EMA26PM1440', Float),
        Column('EMA50PM1440', Float),
        Column('EMA200PM1440', Float),
        Column('Bollinger_MiddleM1440', Float),
        Column('Bollinger_UpperM1440', Float),
        Column('Bollinger_LowerM1440', Float),
        Column('Stochastic_Oscillator_KM1440', Float),
        Column('Stochastic_Oscillator_DM1440', Float),
        Column('Chicku_SpanM1440', Float),
        Column('Tenken_SenM1440', Float),
        Column('Kijun_SenM1440', Float),
        Column('Senkou_AM1440', Float),
        Column('Senkou_BM1440', Float),
        Column('Fib100%M1440', Float),
        Column('Fib78.6%M1440', Float),
        Column('Fib61.8%M1440', Float),
        Column('Fib50%M1440', Float),
        Column('Fib38.2%M1440', Float),
        Column('Fib23.6%M1440', Float),
        Column('Fib0%M1440', Float),
        Column('ATR7PM1440', Float),
        Column('ATR14PM1440', Float),
        Column('ATR20PM1440', Float),
        Column('ATR50PM1440', Float),
        Column('ATR100PM1440', Float),
        Column('google_trends_scoreM1440', SmallInteger),
        Column('order_book', JSON, nullable=True),
        Column('bidask_spread', Float),
        Column('buy_sell_ratio', Float),
        Column('order_flow_imbalance', Float),
        Column('cumulative_volume_delta', Float),
        Column('price_impact', Float),
        Column('top_of_book_depth', JSON, nullable=True),  # Change to JSON
        Column('liquidity_imbalance', Float),
        Column('support', Float),
        Column('resistance', Float),
        Column('vwap', Float),
        Column('order_book_pressure', Float),
        Column('market_depth', JSON, nullable=True),
        Column('order_book_slope', JSON, nullable=True),
        Column('market_price2', Float),
        Column('ask_price2', Float),
        Column('bid_price2', Float),
        Column('open_price2', Float),
        Column('high_price2', Float),
        Column('low_price2', Float),
        Column('close_price2', Float),
        Column('volume2', Float),
        Column('RSI2', Float),
        Column('MACD2', Float),
        Column('MACD_Signal2', Float),
        Column('MACD_Hist2', Float),
        Column('SMA2', Float),
        Column('EMA12P2', Float),
        Column('EMA26P2', Float),
        Column('EMA50P2', Float),
        Column('EMA200P2', Float),
        Column('Bollinger_Middle2', Float),
        Column('Bollinger_Upper2', Float),
        Column('Bollinger_Lower2', Float),
        Column('Stochastic_Oscillator_K2', Float),
        Column('Stochastic_Oscillator_D2', Float),
        Column('Chicku_Span2', Float),
        Column('Tenken_Sen2', Float),
        Column('Kijun_Sen2', Float),
        Column('Senkou_A2', Float),
        Column('Senkou_B2', Float),
        Column('Fib100%2', Float),
        Column('Fib78.6%2', Float),
        Column('Fib61.8%2', Float),
        Column('Fib50%2', Float),
        Column('Fib38.2%2', Float),
        Column('Fib23.6%2', Float),
        Column('Fib0%2', Float),
        Column('ATR7P2', Float),
        Column('ATR14P2', Float),
        Column('ATR20P2', Float),
        Column('ATR50P2', Float),
        Column('ATR100P2', Float),
        Column('open_price2M5', Float),
        Column('high_price2M5', Float),
        Column('low_price2M5', Float),
        Column('close_price2M5', Float),
        Column('volume2M5', Integer),
        Column('RSI2M5', Float),
        Column('MACD2M5', Float),
        Column('MACD_Signal2M5', Float),
        Column('MACD_Hist2M5', Float),
        Column('SMA2M5', Float),
        Column('EMA12P2M5', Float),
        Column('EMA26P2M5', Float),
        Column('EMA50P2M5', Float),
        Column('EMA200P2M5', Float),
        Column('Bollinger_Middle2M5', Float),
        Column('Bollinger_Upper2M5', Float),
        Column('Bollinger_Lower2M5', Float),
        Column('Stochastic_Oscillator_K2M5', Float),
        Column('Stochastic_Oscillator_D2M5', Float),
        Column('Chicku_Span2M5', Float),
        Column('Tenken_Sen2M5', Float),
        Column('Kijun_Sen2M5', Float),
        Column('Senkou_A2M5', Float),
        Column('Senkou_B2M5', Float),
        Column('Fib100%2M5', Float),
        Column('Fib78.6%2M5', Float),
        Column('Fib61.8%2M5', Float),
        Column('Fib50%2M5', Float),
        Column('Fib38.2%2M5', Float),
        Column('Fib23.6%2M5', Float),
        Column('Fib0%2M5', Float),
        Column('ATR7P2M5', Float),
        Column('ATR14P2M5', Float),
        Column('ATR20P2M5', Float),
        Column('ATR50P2M5', Float),
        Column('ATR100P2M5', Float),
        Column('open_price2M15', Float),
        Column('high_price2M15', Float),
        Column('low_price2M15', Float),
        Column('close_price2M15', Float),
        Column('volume2M15', Integer),
        Column('RSI2M15', Float),
        Column('MACD2M15', Float),
        Column('MACD_Signal2M15', Float),
        Column('MACD_Hist2M15', Float),
        Column('SMA2M15', Float),
        Column('EMA12P2M15', Float),
        Column('EMA26P2M15', Float),
        Column('EMA50P2M15', Float),
        Column('EMA200P2M15', Float),
        Column('Bollinger_Middle2M15', Float),
        Column('Bollinger_Upper2M15', Float),
        Column('Bollinger_Lower2M15', Float),
        Column('Stochastic_Oscillator_K2M15', Float),
        Column('Stochastic_Oscillator_D2M15', Float),
        Column('Chicku_Span2M15', Float),
        Column('Tenken_Sen2M15', Float),
        Column('Kijun_Sen2M15', Float),
        Column('Senkou_A2M15', Float),
        Column('Senkou_B2M15', Float),
        Column('Fib100%2M15', Float),
        Column('Fib78.6%2M15', Float),
        Column('Fib61.8%2M15', Float),
        Column('Fib50%2M15', Float),
        Column('Fib38.2%2M15', Float),
        Column('Fib23.6%2M15', Float),
        Column('Fib0%2M15', Float),
        Column('ATR7P2M15', Float),
        Column('ATR14P2M15', Float),
        Column('ATR20P2M15', Float),
        Column('ATR50P2M15', Float),
        Column('ATR100P2M15', Float),
        Column('open_price2M60', Float),
        Column('high_price2M60', Float),
        Column('low_price2M60', Float),
        Column('close_price2M60', Float),
        Column('volume2M60', Integer),
        Column('RSI2M60', Float),
        Column('MACD2M60', Float),
        Column('MACD_Signal2M60', Float),
        Column('MACD_Hist2M60', Float),
        Column('SMA2M60', Float),
        Column('EMA12P2M60', Float),
        Column('EMA26P2M60', Float),
        Column('EMA50P2M60', Float),
        Column('EMA200P2M60', Float),
        Column('Bollinger_Middle2M60', Float),
        Column('Bollinger_Upper2M60', Float),
        Column('Bollinger_Lower2M60', Float),
        Column('Stochastic_Oscillator_K2M60', Float),
        Column('Stochastic_Oscillator_D2M60', Float),
        Column('Chicku_Span2M60', Float),
        Column('Tenken_Sen2M60', Float),
        Column('Kijun_Sen2M60', Float),
        Column('Senkou_A2M60', Float),
        Column('Senkou_B2M60', Float),
        Column('Fib100%2M60', Float),
        Column('Fib78.6%2M60', Float),
        Column('Fib61.8%2M60', Float),
        Column('Fib50%2M60', Float),
        Column('Fib38.2%2M60', Float),
        Column('Fib23.6%2M60', Float),
        Column('Fib0%2M60', Float),
        Column('ATR7P2M60', Float),
        Column('ATR14P2M60', Float),
        Column('ATR20P2M60', Float),
        Column('ATR50P2M60', Float),
        Column('ATR100P2M60', Float),
        Column('open_price2M1440', Float),
        Column('high_price2M1440', Float),
        Column('low_price2M1440', Float),
        Column('close_price2M1440', Float),
        Column('volume2M1440', Integer),
        Column('RSI2M1440', Float),
        Column('MACD2M1440', Float),
        Column('MACD_Signal2M1440', Float),
        Column('MACD_Hist2M1440', Float),
        Column('SMA2M1440', Float),
        Column('EMA12P2M1440', Float),
        Column('EMA26P2M1440', Float),
        Column('EMA50P2M1440', Float),
        Column('EMA200P2M1440', Float),
        Column('Bollinger_Middle2M1440', Float),
        Column('Bollinger_Upper2M1440', Float),
        Column('Bollinger_Lower2M1440', Float),
        Column('Stochastic_Oscillator_K2M1440', Float),
        Column('Stochastic_Oscillator_D2M1440', Float),
        Column('Chicku_Span2M1440', Float),
        Column('Tenken_Sen2M1440', Float),
        Column('Kijun_Sen2M1440', Float),
        Column('Senkou_A2M1440', Float),
        Column('Senkou_B2M1440', Float),
        Column('Fib100%2M1440', Float),
        Column('Fib78.6%2M1440', Float),
        Column('Fib61.8%2M1440', Float),
        Column('Fib50%2M1440', Float),
        Column('Fib38.2%2M1440', Float),
        Column('Fib23.6%2M1440', Float),
        Column('Fib0%2M1440', Float),
        Column('ATR7P2M1440', Float),
        Column('ATR14P2M1440', Float),
        Column('ATR20P2M1440', Float),
        Column('ATR50P2M1440', Float),
        Column('ATR100P2M1440', Float),
        Column('order_book2', JSON, nullable=True),
        Column('bidask_spread2', Float),
        Column('buy_sell_ratio2', Float),
        Column('order_flow_imbalance2', Float),
        Column('cumulative_volume_delta2', Float),
        Column('price_impact2', Float),
        Column('top_of_book_depth2', JSON, nullable=True),  # Change to JSON
        Column('liquidity_imbalance2', Float),
        Column('support2', Float),
        Column('resistance2', Float),
        Column('vwap2', Float),
        Column('order_book_pressure2', Float),
        Column('market_depth2', JSON, nullable=True),
        Column('order_book_slope2', JSON, nullable=True),
        Column('market_price3', Float),
        Column('ask_price3', Float),
        Column('bid_price3', Float),
        Column('open_price3', Float),
        Column('high_price3', Float),
        Column('low_price3', Float),
        Column('close_price3', Float),
        Column('volume3', Float),
        Column('RSI3', Float),
        Column('MACD3', Float),
        Column('MACD_Signal3', Float),
        Column('MACD_Hist3', Float),
        Column('SMA3', Float),
        Column('EMA12P3', Float),
        Column('EMA26P3', Float),
        Column('EMA50P3', Float),
        Column('EMA200P3', Float),
        Column('Bollinger_Middle3', Float),
        Column('Bollinger_Upper3', Float),
        Column('Bollinger_Lower3', Float),
        Column('Stochastic_Oscillator_K3', Float),
        Column('Stochastic_Oscillator_D3', Float),
        Column('Chicku_Span3', Float),
        Column('Tenken_Sen3', Float),
        Column('Kijun_Sen3', Float),
        Column('Senkou_A3', Float),
        Column('Senkou_B3', Float),
        Column('Fib100%3', Float),
        Column('Fib78.6%3', Float),
        Column('Fib61.8%3', Float),
        Column('Fib50%3', Float),
        Column('Fib38.2%3', Float),
        Column('Fib23.6%3', Float),
        Column('Fib0%3', Float),
        Column('ATR7P3', Float),
        Column('ATR14P3', Float),
        Column('ATR20P3', Float),
        Column('ATR50P3', Float),
        Column('ATR100P3', Float),
        Column('open_price3M5', Float),
        Column('high_price3M5', Float),
        Column('low_price3M5', Float),
        Column('close_price3M5', Float),
        Column('volume3M5', Integer),
        Column('RSI3M5', Float),
        Column('MACD3M5', Float),
        Column('MACD_Signal3M5', Float),
        Column('MACD_Hist3M5', Float),
        Column('SMA3M5', Float),
        Column('EMA12P3M5', Float),
        Column('EMA26P3M5', Float),
        Column('EMA50P3M5', Float),
        Column('EMA200P3M5', Float),
        Column('Bollinger_Middle3M5', Float),
        Column('Bollinger_Upper3M5', Float),
        Column('Bollinger_Lower3M5', Float),
        Column('Stochastic_Oscillator_K3M5', Float),
        Column('Stochastic_Oscillator_D3M5', Float),
        Column('Chicku_Span3M5', Float),
        Column('Tenken_Sen3M5', Float),
        Column('Kijun_Sen3M5', Float),
        Column('Senkou_A3M5', Float),
        Column('Senkou_B3M5', Float),
        Column('Fib100%3M5', Float),
        Column('Fib78.6%3M5', Float),
        Column('Fib61.8%3M5', Float),
        Column('Fib50%3M5', Float),
        Column('Fib38.2%3M5', Float),
        Column('Fib23.6%3M5', Float),
        Column('Fib0%3M5', Float),
        Column('ATR7P3M5', Float),
        Column('ATR14P3M5', Float),
        Column('ATR20P3M5', Float),
        Column('ATR50P3M5', Float),
        Column('ATR100P3M5', Float),
        Column('open_price3M15', Float),
        Column('high_price3M15', Float),
        Column('low_price3M15', Float),
        Column('close_price3M15', Float),
        Column('volume3M15', Integer),
        Column('RSI3M15', Float),
        Column('MACD3M15', Float),
        Column('MACD_Signal3M15', Float),
        Column('MACD_Hist3M15', Float),
        Column('SMA3M15', Float),
        Column('EMA12P3M15', Float),
        Column('EMA26P3M15', Float),
        Column('EMA50P3M15', Float),
        Column('EMA200P3M15', Float),
        Column('Bollinger_Middle3M15', Float),
        Column('Bollinger_Upper3M15', Float),
        Column('Bollinger_Lower3M15', Float),
        Column('Stochastic_Oscillator_K3M15', Float),
        Column('Stochastic_Oscillator_D3M15', Float),
        Column('Chicku_Span3M15', Float),
        Column('Tenken_Sen3M15', Float),
        Column('Kijun_Sen3M15', Float),
        Column('Senkou_A3M15', Float),
        Column('Senkou_B3M15', Float),
        Column('Fib100%3M15', Float),
        Column('Fib78.6%3M15', Float),
        Column('Fib61.8%3M15', Float),
        Column('Fib50%3M15', Float),
        Column('Fib38.2%3M15', Float),
        Column('Fib23.6%3M15', Float),
        Column('Fib0%3M15', Float),
        Column('ATR7P3M15', Float),
        Column('ATR14P3M15', Float),
        Column('ATR20P3M15', Float),
        Column('ATR50P3M15', Float),
        Column('ATR100P3M15', Float),
        Column('open_price3M60', Float),
        Column('high_price3M60', Float),
        Column('low_price3M60', Float),
        Column('close_price3M60', Float),
        Column('volume3M60', Integer),
        Column('RSI3M60', Float),
        Column('MACD3M60', Float),
        Column('MACD_Signal3M60', Float),
        Column('MACD_Hist3M60', Float),
        Column('SMA3M60', Float),
        Column('EMA12P3M60', Float),
        Column('EMA26P3M60', Float),
        Column('EMA50P3M60', Float),
        Column('EMA200P3M60', Float),
        Column('Bollinger_Middle3M60', Float),
        Column('Bollinger_Upper3M60', Float),
        Column('Bollinger_Lower3M60', Float),
        Column('Stochastic_Oscillator_K3M60', Float),
        Column('Stochastic_Oscillator_D3M60', Float),
        Column('Chicku_Span3M60', Float),
        Column('Tenken_Sen3M60', Float),
        Column('Kijun_Sen3M60', Float),
        Column('Senkou_A3M60', Float),
        Column('Senkou_B3M60', Float),
        Column('Fib100%3M60', Float),
        Column('Fib78.6%3M60', Float),
        Column('Fib61.8%3M60', Float),
        Column('Fib50%3M60', Float),
        Column('Fib38.2%3M60', Float),
        Column('Fib23.6%3M60', Float),
        Column('Fib0%3M60', Float),
        Column('ATR7P3M60', Float),
        Column('ATR14P3M60', Float),
        Column('ATR20P3M60', Float),
        Column('ATR50P3M60', Float),
        Column('ATR100P3M60', Float),
        Column('open_price3M1440', Float),
        Column('high_price3M1440', Float),
        Column('low_price3M1440', Float),
        Column('close_price3M1440', Float),
        Column('volume3M1440', Integer),
        Column('RSI3M1440', Float),
        Column('MACD3M1440', Float),
        Column('MACD_Signal3M1440', Float),
        Column('MACD_Hist3M1440', Float),
        Column('SMA3M1440', Float),
        Column('EMA12P3M1440', Float),
        Column('EMA26P3M1440', Float),
        Column('EMA50P3M1440', Float),
        Column('EMA200P3M1440', Float),
        Column('Bollinger_Middle3M1440', Float),
        Column('Bollinger_Upper3M1440', Float),
        Column('Bollinger_Lower3M1440', Float),
        Column('Stochastic_Oscillator_K3M1440', Float),
        Column('Stochastic_Oscillator_D3M1440', Float),
        Column('Chicku_Span3M1440', Float),
        Column('Tenken_Sen3M1440', Float),
        Column('Kijun_Sen3M1440', Float),
        Column('Senkou_A3M1440', Float),
        Column('Senkou_B3M1440', Float),
        Column('Fib100%3M1440', Float),
        Column('Fib78.6%3M1440', Float),
        Column('Fib61.8%3M1440', Float),
        Column('Fib50%3M1440', Float),
        Column('Fib38.2%3M1440', Float),
        Column('Fib23.6%3M1440', Float),
        Column('Fib0%3M1440', Float),
        Column('ATR7P3M1440', Float),
        Column('ATR14P3M1440', Float),
        Column('ATR20P3M1440', Float),
        Column('ATR50P3M1440', Float),
        Column('ATR100P3M1440', Float),
        Column('order_book3', JSON, nullable=True),
        Column('bidask_spread3', Float),
        Column('buy_sell_ratio3', Float),
        Column('order_flow_imbalance3', Float),
        Column('cumulative_volume_delta3', Float),
        Column('price_impact3', Float),
        Column('top_of_book_depth3', JSON, nullable=True),  # Change to JSON
        Column('liquidity_imbalance3', Float),
        Column('support3', Float),
        Column('resistance3', Float),
        Column('vwap3', Float),
        Column('order_book_pressure3', Float),
        Column('market_depth3', JSON, nullable=True),
        Column('order_book_slope3', JSON, nullable=True),
        Column('news_p_score', Float),
        Column('news_n_score', Float),
        Column('news_r_score', Float),
        Column('news_tf_score', Float),
        Column('news_tp_score', Float),
        Column('news_sr_score', Float),
        Column('sm_p_score', Float),
        Column('sm_n_score', Float),
        Column('sm_r_score', Float),
        Column('sm_tf_score', Float),
        Column('sm_tp_score', Float),
        Column('sm_sr_score', Float),
        Column('price_action', JSON, nullable=True),
        Column('VIPTrades', JSON, nullable=True),
        Column('telegram_positive', Float),
        Column('telegram_negative', Float),
        Column('telegram_volume', Float),
        Column('telegram_message', MEDIUMTEXT),
        Column('Curated', Integer, default=0)
    )
    metadata.create_all(engine)
    return ticker_table

def check_if_table_exists(engine, table_name):
    inspector = inspect(engine)
    return table_name in inspector.get_table_names()

def insert_crypto_data(engine, table, batch_rows):
    with engine.begin() as conn:
        for row in batch_rows:
            # Check if row exists
            existing = conn.execute(
                table.select().where(table.c.timestamp == row['timestamp'])
            ).fetchone()

            if not existing:
                # Partial Insert: only columns that are present & not None
                insert_dict = {k: v for k, v in row.items() if v is not None}
                stmt = insert(table).values(**insert_dict)
                conn.execute(stmt)
            else:
                # Partial Update: only columns that are present & not None
                update_dict = {k: v for k, v in row.items() if k != 'timestamp' and v is not None}
                if update_dict:
                    stmt = (
                        table.update()
                        .where(table.c.timestamp == row['timestamp'])
                        .values(**update_dict)
                    )
                    conn.execute(stmt)

def acquire_lock(asset, id, duration_minutes):
    now = datetime.now()
    expiration = now + timedelta(minutes=duration_minutes)
    query = text(f"""
        INSERT INTO dragnetcontrol.dragnet_locks (asset_name, locked_by, lock_expiration)
        VALUES (:asset, :worker, :expiration)
        ON DUPLICATE KEY UPDATE
            locked_by = IF(lock_expiration < :now, :worker, locked_by),
            lock_expiration = IF(lock_expiration < :now, :expiration, lock_expiration)
    """)
    select_query = text(f"""
        SELECT locked_by FROM dragnetcontrol.dragnet_locks
        WHERE asset_name = :asset
    """)
    with control_engine.connect() as conn:
        with conn.begin():
            conn.execute(query, {
                'asset': asset,
                'worker': id,
                'expiration': expiration,
                'now': now
            })
            result = conn.execute(select_query, {'asset': asset}).scalar()
    return result == id

